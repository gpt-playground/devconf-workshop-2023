


Your login details:
  AWS Account Id: 915070490008
  IAM Username  : workshop-assistant-David-undefined-5187435144
  IAM Password  : t3MpP@ssw0rd!4:5187435144
  Access Key    : AKIA5KDTTSWMILFBXAV2
  Secret Key    : jUomzRdpqM3zaDsdLAtw3db0RgEy3w2lqD/lTVRO

You can set your environment
MacOS & Linux
export AWS_ACCESS_KEY_ID="AKIA5KDTTSWMILFBXAV2"
export AWS_SECRET_ACCESS_KEY="jUomzRdpqM3zaDsdLAtw3db0RgEy3w2lqD/lTVRO"

Windows
SET AWS_ACCESS_KEY_ID="AKIA5KDTTSWMILFBXAV2"
SET AWS_SECRET_ACCESS_KEY="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"


WARNING: Sending this type info over a channel like telegram is generally a bad idea, but for workshop purposes it is okay.


Telegram Bot:
export TELEGRAM_TOKEN=6159379527:AAHWVxXH0L7uZehC7sgUT-VskvBrrl0bTQQ


OPENAI API KEYS:
export OPENAI_API_KEY=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
export OPENAI_API_KEY_2=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


TEST AWS

aws s3api list-buckets

{
    "Buckets": [
        {
            "CreationDate": "2023-05-24T15:33:55.000Z",
            "Name": "devconf-backend-configurations"
        }
    ],
    "Owner": {
        "ID": "5b5a28ced6940c8e5026a76245b0b2f35693b32ee7ebca0493b8c55524ed45a6",
        "DisplayName": "aws-accounts+rnd-devconf"
    }
}


TERRAFORM:
https://sites.google.com/cloudandthings.io/cloudandthings-io/terraform?authuser=0

https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role


----

key
  The path to the state file inside the bucket

  Enter a value: david


Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.
Error refreshing state: AccessDenied: Access Denied
	status code: 403, request id: E3VCM2SBGD06C6AC, host id: uaFrDDWS9MjnY/YXZDoVgcvuK+w4eaPmIht/Ak+uzMbpk8IuTGPc52bgrFpNIVdlQ1Cvmie/RtU=
mandla@mandla-HPZ:/home/ebridge/src/github.com/gpt-playground/devconf-workshop-2023$ rm -rf .terraform
mandla@mandla-HPZ:/home/ebridge/src/github.com/gpt-playground/devconf-workshop-2023$ ls -ltr .
./          ../         .git/       .github/    .gitignore  
mandla@mandla-HPZ:/home/ebridge/src/github.com/gpt-playground/devconf-workshop-2023$ terraform init

Initializing the backend...
key
  The path to the state file inside the bucket

  Enter a value: david


Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.
Initializing modules...
- chatgpt-telegram in aws-chatgpt-telegram

Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Finding latest version of hashicorp/archive...
- Installing hashicorp/aws v4.67.0...
- Installed hashicorp/aws v4.67.0 (signed by HashiCorp)
- Installing hashicorp/archive v2.3.0...
- Installed hashicorp/archive v2.3.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

----

